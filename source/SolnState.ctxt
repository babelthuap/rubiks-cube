#BlueJ class context
comment0.params=inputPos\ inputOrt
comment0.target=SolnState(java.lang.String[],\ int[])
comment1.params=
comment1.target=java.lang.String[]\ pos()
comment10.params=
comment10.target=void\ L()
comment11.params=
comment11.target=void\ U()
comment12.params=
comment12.target=void\ D()
comment13.params=
comment13.target=void\ Fi()
comment14.params=
comment14.target=void\ Bi()
comment15.params=
comment15.target=void\ Ri()
comment16.params=
comment16.target=void\ Li()
comment17.params=
comment17.target=void\ Ui()
comment18.params=
comment18.target=void\ Di()
comment19.params=
comment19.target=java.lang.String[][]\ colorList()
comment19.text=The\ colorList\ method\ returns\ a\ 2-dimensional\ String\ array\n\ describing,\ in\ detail,\ the\ configuration\ of\ the\ cube.\ This\ is\n\ directly\ used\ in\ modeling\ the\ cube\ (in\ the\ Cubie\ class).\n\ \n\ The\ output\ is\ an\ 9x6\ array.\ \ The\ first\ dimension\ specifies\ a\n\ cubie,\ and\ the\ second\ dimension\ specifies\ a\ face\ of\ a\ given\ cubie.\n\ For\ this\ we\ need\ CONVENTIONS\!\n\ \n\ The\ cubies\ are\ numbered\ as\ follows\:\n\ \ \ \ bottom\ layer\:\ \ top\ layer\:\n\ \ \ \ \ \ \ \ 0\ 3\ \ \ \ \ \ \ \ \ \ \ 4\ 7\ \ \ \ \ \ \ \ \ (\ \ back-left,\ back-right\ \ )\n\ \ \ \ \ \ \ \ 1\ 2\ \ \ \ \ \ \ \ \ \ \ 5\ 6\ \ \ \ \ \ \ \ \ (\ front-left,\ front-right\ )\n\ (the\ ninth\ "cubie"\ is\ the\ center\ cube)\n\ \n\ The\ faces\ of\ each\ cubie\ are\ numbered\ as\ follows\:\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ +----------+\n\ \ \ \ \ \ \ \ \ \ \ \ \ /\ \ \ top\ \ \ \ /|\n\ \ \ \ \ \ \ \ \ \ \ \ /\ \ \ \ \ 5\ \ \ \ /\ |\ <--\ back\=4\n\ \ \ \ \ \ \ \ \ \ \ +----------+\ R|\n\ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ \ \ \ \ |\ 3|\n\ left\=1\ -->|\ \ front\ \ \ |\ \ +\n\ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ 2\ \ \ \ \ |\ /\n\ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ \ \ \ \ |/\ <--\ bottom\=0\n\ \ \ \ \ \ \ \ \ \ \ +----------+\n
comment2.params=
comment2.target=int[]\ ort()
comment20.params=input\ orient\ cNum
comment20.target=java.lang.String[]\ colorTriple(java.lang.String,\ int,\ int)
comment20.text=takes\ a\ string\ of\ three\ letters,\ and\ separates\ them\ into\ an\n\ array\ of\ color\ names,\ shifted\ right\ by\ the\ value\ of\ "orient"\n\ \ \ \ \ \ e.g.\ (WBR,\ 0)\ -->\ {"W",\ "B",\ "R"}\n\ \ \ \ \ \ \ \ \ \ \ (WBR,\ 1)\ -->\ {"B",\ "R",\ "W"}\n\ \ \ \ \ \ \ \ \ \ \ (WBR,\ 2)\ -->\ {"R",\ "W",\ "B"}\n
comment3.params=which
comment3.target=void\ doMove(java.lang.String)
comment4.params=
comment4.target=boolean\ isSolved()
comment5.params=which
comment5.target=boolean\ oneFaceSolved(int)
comment6.params=
comment6.target=java.lang.String[][]\ panelColors()
comment7.params=
comment7.target=void\ F()
comment7.text=METHODS\ TO\ ROTATE\ THE\ DIFFERENT\ LAYERS\n\ possible\ moves\ are\ F,\ B,\ R,\ L,\ U,\ D\ and\ their\ inverses\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (default\ direction\ is\ clockwise)\n
comment8.params=
comment8.target=void\ B()
comment9.params=
comment9.target=void\ R()
numComments=21
